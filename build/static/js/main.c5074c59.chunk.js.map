{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","services/api.js","components/Modal/Modal.js","components/Button/Button.js","components/Loader/Loader.js","components/App.js","index.js"],"names":["Searchbar","state","query","onHandleChange","e","setState","currentTarget","value","onHandleSubmit","preventDefault","props","onSubmit","this","className","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","src","alt","bigSrc","onClick","ImageGallery","hits","map","id","webformatURL","largeImageURL","tags","axios","defaults","baseURL","process","fetchPicturesApi","searchQuery","currentPage","get","then","res","data","catch","console","log","modalRoot","document","querySelector","Modal","handelKeyDown","event","code","onClose","handelBackdrop","target","window","addEventListener","removeEventListener","createPortal","url","Button","fetchPictures","AppLoader","color","height","width","timeout","App","largeImageUrl","isLoading","options","prev","finally","scrollTo","top","documentElement","scrollHeight","behavior","onFormSubmit","onToggleModal","prevProps","prevState","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c5074c59.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Searchbar extends Component {\r\n  state = { query: '' };\r\n\r\n  onHandleChange = e => {\r\n    this.setState({ query: e.currentTarget.value });\r\n  };\r\n\r\n  onHandleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.query);\r\n    this.setState({ query: '' });\r\n  };\r\n\r\n  render() {\r\n    const { query } = this.state;\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.onHandleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={query}\r\n            onChange={this.onHandleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ src, alt, bigSrc, onClick }) => {\r\n  const onClickImg = () => {\r\n    onClick(bigSrc);\r\n  };\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={src}\r\n        alt={alt}\r\n        className=\"ImageGalleryItem-image\"\r\n        onClick={onClickImg}\r\n      />\r\n    </li>\r\n  );\r\n};\r\nImageGalleryItem.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  bigSrc: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ hits, onClick }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {hits.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          src={webformatURL}\r\n          bigSrc={largeImageURL}\r\n          alt={tags}\r\n          onClick={onClick}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  hits: PropTypes.array.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\nexport default ImageGallery;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_BASE_URL;\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nconst fetchPicturesApi = ({ searchQuery = '', currentPage = 1 }) => {\r\n  return axios\r\n    .get(\r\n      `?q=${searchQuery}&page=${currentPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n    )\r\n    .then(res => res.data.hits)\r\n    .catch(console.log);\r\n};\r\n\r\nexport default fetchPicturesApi;\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  state = {};\r\n\r\n  handelKeyDown = event => {\r\n    if (event.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handelKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handelKeyDown);\r\n  }\r\n\r\n  handelBackdrop = event => {\r\n    if (event.currentTarget !== event.target) return false;\r\n    this.props.onClose();\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handelBackdrop}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.url} alt=\"big_picture\" />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\n\r\nconst Button = ({ fetchPictures }) => {\r\n  return (\r\n    <button className=\"Button\" type=\"button\" onClick={fetchPictures}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport default class AppLoader extends Component {\r\n  render() {\r\n    return (\r\n      <Loader\r\n        type=\"Circles\"\r\n        color=\"#3f51b5\"\r\n        height={40}\r\n        width={40}\r\n        timeout={4000} //3 secs\r\n        className=\"loader\"\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Searchbar from './Searchbar/Searchbar';\r\nimport ImageGallery from './ImageGallery/ImageGallery';\r\nimport fetchPicturesApi from '../services/api';\r\nimport Modal from './Modal/Modal';\r\nimport Button from './Button/Button';\r\nimport AppLoader from './Loader/Loader';\r\nclass App extends Component {\r\n  state = {\r\n    hits: [],\r\n    currentPage: 1,\r\n    searchQuery: '',\r\n    largeImageUrl: '',\r\n    isLoading: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.searchQuery !== this.state.searchQuery) {\r\n      this.fetchPictures();\r\n    }\r\n  }\r\n  fetchPictures = () => {\r\n    const { currentPage, searchQuery } = this.state;\r\n\r\n    const options = {\r\n      searchQuery,\r\n      currentPage,\r\n    };\r\n\r\n    this.setState({ isLoading: true });\r\n\r\n    fetchPicturesApi(options)\r\n      .then(hits => {\r\n        this.setState(prev => ({\r\n          hits: [...prev.hits, ...hits],\r\n          currentPage: prev.currentPage + 1,\r\n        }));\r\n      })\r\n      .catch(console.log)\r\n      .finally(() => {\r\n        this.setState({ isLoading: false });\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: 'smooth',\r\n        });\r\n      });\r\n  };\r\n\r\n  onFormSubmit = query => {\r\n    this.setState({\r\n      searchQuery: query,\r\n      currentPage: 1,\r\n      hits: [],\r\n    });\r\n  };\r\n\r\n  onToggleModal = url => {\r\n    this.setState({ largeImageUrl: url ? url : '' });\r\n  };\r\n\r\n  render() {\r\n    const { hits, isLoading, largeImageUrl } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <Searchbar onSubmit={this.onFormSubmit} />\r\n        {largeImageUrl && (\r\n          <Modal onClose={this.onToggleModal} url={largeImageUrl} />\r\n        )}\r\n        <ImageGallery hits={hits} onClick={this.onToggleModal} />\r\n        {!!hits.length && !isLoading && (\r\n          <Button fetchPictures={this.fetchPictures} />\r\n        )}\r\n        {isLoading && <AppLoader />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}