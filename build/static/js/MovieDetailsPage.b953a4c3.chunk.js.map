{"version":3,"sources":["styles/MovieDetailsPageStyled.js","pages/MovieDetailsPage.js"],"names":["MovieDetailsStyled","styled","div","Cast","lazy","Reviews","MovieDetailsPage","state","details","from","loaded","isLoading","a","id","this","props","match","params","setState","fetchSearchMoviesDetails","res","location","console","log","poster_path","title","release_date","vote_average","overview","genres","date","Date","getFullYear","className","type","onClick","history","push","src","alt","map","genre","name","activeClassName","to","fallback","AppLoader","path","exact","component","Component"],"mappings":"4PAEaA,E,KAAqBC,EAAOC,IAAV,wpB,OCIzBC,EAAOC,gBAAK,kBAAM,iCAClBC,EAAUD,gBAAK,kBAAM,iCACrBE,E,4MACJC,MAAQ,CACNC,QAAS,GACTC,KAAM,KACNC,QAAQ,EACRC,WAAW,G,8FAGb,8BAAAC,EAAA,6DACQC,EAAKC,KAAKC,MAAMC,MAAMC,OAAOJ,IAAM,GAD3C,SAGIC,KAAKI,SAAS,CAAEP,WAAW,IAH/B,SAIsBQ,YAAyBN,GAJ/C,OAIUO,EAJV,OAKIN,KAAKI,SAAS,CACZV,QAASY,EACTX,KAAMK,KAAKC,MAAMM,SAASd,MAAME,KAChCE,WAAW,EACXD,QAAQ,IATd,gDAYIY,QAAQC,IAAI,uBAAZ,MAZJ,yD,0EAgBA,WAAU,IAAD,OACDV,EAAKC,KAAKC,MAAMC,MAAMC,OAAOJ,IAAM,GACzC,EAA8BC,KAAKP,MAA3BI,EAAR,EAAQA,UAAWD,EAAnB,EAAmBA,OACnB,EACEI,KAAKP,MAAMC,QADLgB,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,MAAOC,EAA5B,EAA4BA,aAAcC,EAA1C,EAA0CA,aAAcC,EAAxD,EAAwDA,SAAUC,EAAlE,EAAkEA,OAElE,IAAKnB,GAAUC,EAAW,OAAO,KAEjC,IACMmB,EAAO,IAAIC,KAAKL,GAAcM,cACpC,OACE,eAAChC,EAAD,WACE,wBACEiC,UAAU,UACVC,KAAK,SACLC,QAAS,kBAAM,EAAKpB,MAAMqB,QAAQC,KAAK,EAAK9B,MAAME,OAHpD,4BAOA,oCACGe,EAAc,qBAAKc,IAZX,uDAYyBd,EAAae,IAAKd,IAAY,KAChE,+BACGA,GAAgB,KADnB,KAC2BK,GAAc,KADzC,OAGCH,EAAe,yCAAYA,EAAZ,OAAiC,KACjD,0CACCC,EAAW,4BAAIA,IAAgB,KAChC,wCACA,6BACGC,EAAOW,KAAI,SAAAC,GAAK,OACf,6BAAoBA,EAAMC,MAAjBD,EAAM5B,SAGnB,cAAC,IAAD,CACEoB,UAAU,WACVU,gBAAgB,iBAChBC,GAAE,kBAAa/B,EAAb,YAHJ,qBAOA,cAAC,IAAD,CACEoB,UAAU,WACVU,gBAAgB,iBAChBC,GAAE,kBAAa/B,EAAb,SAHJ,qBASF,sBAAKoB,UAAU,UAAf,UACE,cAAC,WAAD,CAAUY,SAAUC,gBACpB,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,sBAAsBC,OAAK,EAACC,UAAW5C,IACnD,cAAC,IAAD,CAAO0C,KAAK,mBAAmBC,OAAK,EAACC,UAAW9C,UAGnDQ,GAAa,cAAC,IAAD,W,GA/ESuC,aAqFhB5C","file":"static/js/MovieDetailsPage.b953a4c3.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const MovieDetailsStyled = styled.div`\r\n  font-size: 24px;\r\n  line-height: 1.5;\r\n  margin-top: 10px;\r\n\r\n  .infoLink {\r\n    font-size: 24px;\r\n    margin-right: 20px;\r\n    color: #1f1f20;\r\n    text-decoration: underline;\r\n  }\r\n  .infoLinkActive {\r\n    color: #cf9d9d;\r\n  }\r\n\r\n  .infoBox {\r\n    display: block;\r\n    margin-top: 30px;\r\n  }\r\n  .backBtn {\r\n    margin-bottom: 10px;\r\n    font-size: 18px;\r\n    padding: 5px 10px;\r\n    cursor: pointer;\r\n    font-weight: bold;\r\n    background-color: #989494;\r\n    color: #0b0b0c;\r\n    border-radius: 6px;\r\n    &:hover {\r\n      box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n        0px 2px 4px -1px rgba(0, 0, 0, 0.5);\r\n    }\r\n  }\r\n`;\r\n","import React, { Component, lazy, Suspense } from 'react';\r\nimport { fetchSearchMoviesDetails } from '../services/api';\r\nimport { AppLoader } from '../components/Loader/Loader';\r\nimport { NavLink, Route, Switch } from 'react-router-dom';\r\nimport { MovieDetailsStyled } from '../styles/MovieDetailsPageStyled';\r\n\r\nconst Cast = lazy(() => import('./Cast'));\r\nconst Reviews = lazy(() => import('./Reviews'));\r\nclass MovieDetailsPage extends Component {\r\n  state = {\r\n    details: [],\r\n    from: null,\r\n    loaded: false,\r\n    isLoading: false,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const id = this.props.match.params.id || '';\r\n    try {\r\n      this.setState({ isLoading: true });\r\n      const res = await fetchSearchMoviesDetails(id);\r\n      this.setState({\r\n        details: res,\r\n        from: this.props.location.state.from,\r\n        isLoading: false,\r\n        loaded: true,\r\n      });\r\n    } catch (error) {\r\n      console.log('ðŸš€ ~ error', error);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const id = this.props.match.params.id || '';\r\n    const { isLoading, loaded } = this.state;\r\n    const { poster_path, title, release_date, vote_average, overview, genres } =\r\n      this.state.details;\r\n    if (!loaded || isLoading) return null;\r\n\r\n    const imgUrl = 'https://www.themoviedb.org/t/p/w300_and_h450_bestv2/';\r\n    const date = new Date(release_date).getFullYear();\r\n    return (\r\n      <MovieDetailsStyled>\r\n        <button\r\n          className=\"backBtn\"\r\n          type=\"button\"\r\n          onClick={() => this.props.history.push(this.state.from)}\r\n        >\r\n          &larr; Go back\r\n        </button>\r\n        <article>\r\n          {poster_path ? <img src={imgUrl + poster_path} alt={title} /> : null}\r\n          <h2>\r\n            {title ? title : null} ({date ? date : null})\r\n          </h2>\r\n          {vote_average ? <p>Rating: {vote_average}%</p> : null}\r\n          <h3>Overview</h3>\r\n          {overview ? <p>{overview}</p> : null}\r\n          <h4>Genres</h4>\r\n          <ul>\r\n            {genres.map(genre => (\r\n              <li key={genre.id}>{genre.name}</li>\r\n            ))}\r\n          </ul>\r\n          <NavLink\r\n            className=\"infoLink\"\r\n            activeClassName=\"infoLinkActive\"\r\n            to={`/movies/${id}/reviews`}\r\n          >\r\n            Reviews\r\n          </NavLink>\r\n          <NavLink\r\n            className=\"infoLink\"\r\n            activeClassName=\"infoLinkActive\"\r\n            to={`/movies/${id}/cast`}\r\n          >\r\n            Cast\r\n          </NavLink>\r\n        </article>\r\n\r\n        <div className=\"infoBox\">\r\n          <Suspense fallback={AppLoader()}></Suspense>\r\n          <Switch>\r\n            <Route path=\"/movies/:id/reviews\" exact component={Reviews} />\r\n            <Route path=\"/movies/:id/cast\" exact component={Cast} />\r\n          </Switch>\r\n        </div>\r\n        {isLoading && <AppLoader />}\r\n      </MovieDetailsStyled>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieDetailsPage;\r\n"],"sourceRoot":""}